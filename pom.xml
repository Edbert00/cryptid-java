<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cryptid</groupId>
    <artifactId>cryptid-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>CryptID.java</name>
    <description>Cross-platform Identity-based Encryption solution.</description>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
		<developerConnection>scm:git:https://github.com/cryptid-org/cryptid-java.git</developerConnection>
		<connection>scm:git:https://github.com/cryptid-org/cryptid-java.git</connection>
		<tag>HEAD</tag>
		<url>https://github.com/cryptid-org/cryptid-java</url>
    </scm>

    <inceptionYear>2018</inceptionYear>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.outputEncoding>UTF-8</project.build.outputEncoding>

        <!-- DEPENDENCY versions -->
        <groovy.version>2.4.11</groovy.version>
        <javax-activation.version>1.1.1</javax-activation.version>
        <jaxb.version>2.2.11</jaxb.version>
        <picocli.version>3.3.0</picocli.version>
        <spock-core.version>1.1-groovy-2.4</spock-core.version>

        <!-- PLUGIN versions -->
        <maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
        <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
        <maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
        <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
        <maven-site-plugin.version>3.3</maven-site-plugin.version>
        <maven-surefire-plugin.version>2.21.0</maven-surefire-plugin.version>

        <codacy-maven-plugin.version>1.2.0</codacy-maven-plugin.version>
        <gmavenplus-plugin.version>1.6</gmavenplus-plugin.version>
        <go-offline-maven-plugin.version>1.1.0</go-offline-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
    </properties>

    <modules>
        <module>cryptid-core</module>
        <module>cryptid-cli</module>
        <module>coverage</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- COMPILE dependencies -->
            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli</artifactId>
                <version>${picocli.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- TEST dependencies -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>${jaxb.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jaxb.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>${javax-activation.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock-core.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
    				<artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>de.qaware.maven</groupId>
                <artifactId>go-offline-maven-plugin</artifactId>
                <version>${go-offline-maven-plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <show>public</show>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <!-- TODO: Uncomment, when Codacy setup is done. -->
    <!--
    <profiles>
      <profile>
          <id>code-coverage</id>
          <activation>
              <property><name>env.CI</name></property>
          </activation>
          <build>
              <plugins>
                  <plugin>
                      <groupId>com.gavinmogan</groupId>
                      <artifactId>codacy-maven-plugin</artifactId>
                      <version>${codacy-maven-plugin.version}</version>
                      <configuration>
                          <apiToken>${env.CODACY_API_TOKEN}</apiToken>
                          <projectToken>${env.CODACY_PROJECT_TOKEN}</projectToken>
                          <coverageReportFile>coverage/target/site/jacoco-aggregate/jacoco.xml</coverageReportFile>
                          <commit>${env.CIRCLE_SHA1}</commit>
                          <codacyApiBaseUrl>https://api.codacy.com</codacyApiBaseUrl>
                          <failOnMissingReportFile>false</failOnMissingReportFile>
                      </configuration>
                      <executions>
                          <execution>
                              <id>post-test</id>
                              <phase>post-integration-test</phase>
                              <goals>
                                  <goal>coverage</goal>
                              </goals>
                          </execution>
                      </executions>
                  </plugin>
              </plugins>
          </build>
      </profile>
    </profiles>
    -->

    <distributionManagement>
		<site>
			<id>placeholder</id>
			<url>file://placeholder</url>
		</site>
    </distributionManagement>
</project>
